services:
  app:
    build: .
    container_name: laravel_app
    image: laravel_app
    restart: unless-stopped
    volumes:
      - ./:/var/www
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    depends_on:
      - mysql
    networks:
      - app-network
    environment:
      XDEBUG_MODE: debug
      XDEBUG_CONFIG: "client_host=host.docker.internal client_port=9003 start_with_request=yes"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  nginx:
    image: nginx:1.29.0
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app-network

  mysql:
    image: mysql:8.4.6
    container_name: mysql8
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456789
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/conf.d:/etc/mysql/conf.d:ro
    networks:
      - app-network

  redis:
    image: redis:8.0.3
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - cache:/data
    networks:
      - app-network

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - '9000:9000'
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - app-network

  scanner:
    image: sonarsource/sonar-scanner-cli:5.0
    volumes:
      - ./:/usr/src
    working_dir: /usr/src
    environment:
      SONAR_TOKEN: ${SONAR_TOKEN}
    command: -Dsonar.host.url=http://sonarqube:9000
    networks:
      - app-network

volumes:
  mysql_data:
  cache:
    driver: local
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:


networks:
  app-network:
    driver: bridge
